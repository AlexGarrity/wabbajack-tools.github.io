@page "/status"
@using Wabbajack.Web.Services
@using Wabbajack.DTOs
@using Wabbajack.Web.Pages.DetailedStatus
@inject IStateContainer _stateContainer;

<PageTitle>Status Dashboard | Wabbajack</PageTitle>

<div class="px-1 md:p-16">
    <p class="font-bold text-xl">Failing Modlists: @Failing.ToString()</p>
    <p class="font-bold text-xl">Succeeding Modlists: @Succeeding.ToString()</p>

    @if (_errorLoadingModlists)
    {
        @ErrorComponent.RenderError("Unable to load Modlists from GitHub!")
    } else if (!ModlistSummaries.Any())
    {
        @LoadingComponent.RenderLoadingThing("Loading Modlists...")
    }
    else
    {
        <div class="my-1 grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
            @foreach (var modlistSummary in OrderedModlistSummaries)
            {
                <div @key="modlistSummary.MachineURL">
                    @_renderModlistSummary(modlistSummary)
                </div>
            }
        </div>
    }
</div>

@code {
    public const string Route = "/status";

    private bool _shouldRender;
    protected override bool ShouldRender() => _shouldRender;

    // TODO: maybe add repo-support
    private IEnumerable<ModListSummary> ModlistSummaries => _stateContainer.ModlistSummaries
        .Where(x => x.MachineURL.StartsWith("wj-featured/", StringComparison.OrdinalIgnoreCase));
    private IEnumerable<ModListSummary> OrderedModlistSummaries => ModlistSummaries
        .OrderByDescending(x => x.HasFailures)
        .ThenBy(x => x.Name, StringComparer.OrdinalIgnoreCase);

    private int Failing => ModlistSummaries.Count(x => x.HasFailures);
    private int Succeeding => ModlistSummaries.Count(x => !x.HasFailures);

    private bool _errorLoadingModlists;

    protected override async Task OnInitializedAsync()
    {
        if (!_stateContainer.ModlistSummaries.Any())
        {
            var res = await _stateContainer.LoadModlistSummaries();

            if (!res)
            {
                _errorLoadingModlists = true;
                _shouldRender = true;
                return;
            }
        }

        _shouldRender = true;
    }

    // DO NOT CHANGE "__builder"
    // ReSharper disable InconsistentNaming
    // ReSharper disable once UnusedParameter.Local
    private readonly RenderFragment<ModListSummary> _renderModlistSummary = modlistSummary => __builder =>
    {
        var detailedStatusLink = DetailedStatusPage.CreateRedirect(modlistSummary.MachineURL);
        //var time = modlistSummary.Checked.ToLocalTime();

        var bgClass = modlistSummary.HasFailures ? "bg-wabbajack-red" : "bg-black-700";
        <div class="@bgClass text-white rounded-md shadow-md">
            <div class="p-2">
                <a href="@detailedStatusLink" class="font-semibold text-lg hover:underline">@modlistSummary.Name</a>
                <p>Passed: @modlistSummary.Passed.ToString()</p>
                <p>Failed: @modlistSummary.Failed.ToString()</p>
            </div>
        </div>
    };

}
