@page "/"
@using Wabbajack.Web.Services
@using Wabbajack.Web.Posts
@using Wabbajack.Web.Utils
@inject IPostManager _postManager;

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <MudContainer MaxWidth="MaxWidth.Medium" Class="d-sm-flex" Style="padding-top: 160px; padding-bottom: 160px;">
        <img src="wabbajack_transparent.webp"
             alt="Wabbajack Logo"
             loading="eager"
             style="max-width: 300px; height: auto; background: black;"/>
        <div class="ml-4">
            <MudText Typo="Typo.h3">Wabbajack</MudText>
            <MudText Typo="Typo.h6">An Automated Modlist Installer</MudText>
            <MudText Typo="Typo.subtitle1">
                Wabbajack can reproduce an entire modding setup on another machine
                without bundling any assets or re-distributing any mods.
            </MudText>

            <div class="pt-4">
                <MudButton Color="Color.Secondary" Target="_blank"
                           Size="Size.Large"
                           Variant="Variant.Filled"
                           ButtonType="ButtonType.Button"
                           Link="https://github.com/wabbajack-tools/wabbajack/releases/latest/download/Wabbajack.exe">
                    Download latest Version
                </MudButton>
                <MudButton Color="Color.Info" Target="_blank"
                           Size="Size.Large"
                           Variant="Variant.Outlined"
                           ButtonType="ButtonType.Button"
                           Link="https://www.discord.gg/wabbajack">
                    Discord
                </MudButton>
            </div>
        </div>
    </MudContainer>

    @foreach (var post in Posts)
    {
        <MudContainer @key="post.Id" MaxWidth="MaxWidth.Large" Class="pt-4">
            @_renderModlistInfo(post)
        </MudContainer>
    }
</MudContainer>

@code
{
    private IEnumerable<IPost> Posts => _postManager.Posts.OrderByDescending(x => x.Date);

    protected override bool ShouldRender() => false;

    // DO NOT CHANGE "__builder"
    // ReSharper disable InconsistentNaming
    // ReSharper disable once UnusedParameter.Local
    private readonly RenderFragment<IPost> _renderModlistInfo = post => __builder =>
    {
        <MudCard Elevation="DesignConstants.MudCardElevation4">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">@post.Title</MudText>
                    <MudText Typo="Typo.caption">By @post.Author (@post.Date.ToLocalTime().ToString("d"))</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudMarkdown Value="@post.Markdown"/>
            </MudCardContent>
        </MudCard>
    };
}
